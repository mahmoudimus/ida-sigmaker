name: Build and upload to PyPI

on:
    workflow_dispatch:
    release:
        types:
            - published
    workflow_run:
        workflows: ["Release"]
        types:
            - completed

# make concurrency tag-aware so one run doesn't cancel the other incorrectly
concurrency:
    group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
    cancel-in-progress: true

jobs:
    build_wheels:
        name: Build wheels for ${{ matrix.os }}
        runs-on: ${{ matrix.runs-on }}
        strategy:
            matrix:
                include:
                    - os: linux-intel
                      runs-on: ubuntu-latest
                    - os: windows-intel
                      runs-on: windows-latest
                    - os: macos-intel
                      # macos-13 was the last x86_64 runner
                      runs-on: macos-13
                    - os: macos-arm
                      # macos-14+ (including latest) are ARM64 runners
                      runs-on: macos-latest

        steps:
            - uses: actions/checkout@v5

            - name: Build wheels
              uses: pypa/cibuildwheel@v3.1.4
              env:
                  # Build CPython 3.10+ wheels only (as required by project)
                  CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
                  # if no annotation for this build group, this shouldn't be skipped
                  # CIBW_SKIP: "pp*"
              with:
                  package-dir: .
                  output-dir: wheelhouse
                  config-file: "{package}/pyproject.toml"

            - uses: actions/upload-artifact@v4
              with:
                  name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
                  path: ./wheelhouse/*.whl

    build_sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5

            - &display-version
              name: Display version
              run: |
                  python --version
                  pip --version

            - &install-build-twine
              name: Install pypa/build pypa/twine
              run: |
                  pip install --upgrade pip
                  pip install --upgrade setuptools==77.0.1
                  pip install --upgrade build==1.3.0 
                  pip install --upgrade twine==6.2.0 
                  pip install --upgrade packaging==25.0
                  echo "Installed versions:"
                  pip list | grep -E "(twine|packaging|setuptools|build)"

            - &build-sdist
              name: Build sdist
              run: |
                  rm -rf dist/*
                  python -m build --sdist

            - &display-content-dist-folder
              name: Display content dist folder
              run: |
                  ls -shR dist/

            - &run-twine-check
              name: Run twin check
              run: |
                  twine check dist/*

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  path: ./dist/*.tar.gz
                  name: cibw-sdist

    upload_to_pypi:
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest
        name: Upload to pypi
        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write
        steps:
            - name: Download dist
              uses: actions/download-artifact@v5
              with:
                  # unpacks all CIBW artifacts into dist/
                  pattern: cibw-*
                  path: dist
                  merge-multiple: true

            - name: Display downloaded files
              run: |
                  ls -shR
              working-directory: dist

            - uses: pypa/gh-action-pypi-publish@release/v1
              if: ${{
                  github.repository_owner == 'mahmoudimus' && (
                  (github.event_name == 'release' && github.event.action == 'published') ||
                  (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'))
                  }}
              # See https://docs.pypi.org/trusted-publishers/using-a-publisher/
              with:
                  skip-existing: true
