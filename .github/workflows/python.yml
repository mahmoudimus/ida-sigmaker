name: ida-sigmaker tests

on:
    push:
        branches:
            - "main"
    pull_request:
        types:
            - synchronize
            - opened
            - reopened
            - ready_for_review
        branches:
            - "main"

# cancel previous workflow jobs for PRs
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
    cancel-in-progress: true

jobs:
    unit-tests:
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                python-version: ["3.10"]
        env:
            PYTHONPATH: ${{ github.workspace }}
        steps:
            - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Set up Python${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  # cache: "pip"

            - name: Login to GHCR (only if private)
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}

            - name: Try logging in to GHCR
              run: |
                  echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            - name: Create a .env file if it doesn't exist
              run: |
                  if [ ! -f .env ]; then
                      echo "Creating .env file..."
                      touch .env
                  fi

            - name: Cache Docker image
              id: docker-cache
              uses: actions/cache@v4
              with:
                  path: /tmp/docker-cache
                  key: docker-image-${{ runner.os }}-idapro-baked-${{ hashFiles('docker-compose.yml') }}
                  restore-keys: |
                      docker-image-${{ runner.os }}-idapro-baked-${{ hashFiles('docker-compose.yml') }}

            - name: Load cached Docker image if cache exists
              if: steps.docker-cache.outputs.cache-hit == 'true'
              run: |
                  echo "Loading Docker image from cache..."
                  docker load -i /tmp/docker-cache/idapro-baked.tar || echo "No cached image to load."

            - name: Run test_sigmaker.py
              run: |
                  docker compose run --rm --entrypoint bash idapro-tests -c 'python -m unittest discover . -p "test_*.py" -v' ||  { docker compose logs ; exit 1 ; }
                  docker compose logs

            - name: Save Docker image to cache
              if: steps.docker-cache.outputs.cache-hit != 'true'
              run: |
                  echo "Caching docker image for next run..."
                  mkdir -p /tmp/docker-cache
                  docker image ls
                  SHA_NAME=$(curl -s -u ${{ secrets.GHCR_TOKEN }} \
                    -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    https://api.github.com/users/mahmoudimus/packages/container/idapro-linux/versions | \
                    jq -r '.[]|select(.metadata.container.tags[]=="baked")|.name')
                  echo "SHA_NAME: ${SHA_NAME}"
                  docker save $(docker images --format '{{.Repository}}')@${SHA_NAME} -o /tmp/docker-cache/idapro-baked.tar || echo "Failed to save image."
                  # Only save the image if it was not restored from cache
                  # The cache will be updated for future runs
                  # Note: actions/cache@v4 will automatically upload the cache at the end of the job
